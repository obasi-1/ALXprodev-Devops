#!/usr/bin/env bash

# This script extracts specific PokÃ©mon data from data.json
# and formats it using a pipeline of jq, sed, and awk.

# The script first checks if the data file exists.
if [ ! -f "data.json" ]; then
  echo "Error: data.json not found. Please run the API automation script first to create it." >&2
  exit 1
fi

# Pipeline command to extract, modify, and format the data.
# 1. jq extracts the raw values for name, type, weight, and height and
#    prints each on a new line. Weight and height are converted to kg and m.
# 2. sed capitalizes the first letter of the first two lines (name and type).
#    The -E flag enables extended regular expressions.
# 3. awk reads the four lines of data, assigns them to variables, and
#    prints the final, formatted string.
jq -r '.name, .types[0].type.name, (.weight / 10), (.height / 10)' data.json | \
sed -E '1s/(.)/\U\1/; 2s/(.)/\U\1/' | \
awk '
  NR==1 { name=$0 }      # Read the name from the first line
  NR==2 { type=$0 }      # Read the type from the second line
  NR==3 { weight=$0 }    # Read the weight from the third line
  NR==4 { height=$0 }    # Read the height from the fourth line
  END {
    # After reading all lines, print the final formatted string
    printf("%s is of type %s, weighs %skg, and is %sm tall.\n", name, type, weight, height);
  }
'
