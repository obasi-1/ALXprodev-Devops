#!/usr/bin/env bash

# This script generates a summary report for multiple Pokémon.
# It reads all JSON files, creates a CSV report, and calculates
# the average height and weight using awk.

# Define the directory containing the Pokémon JSON files.
DATA_DIR="pokemon_data"
# Define the output CSV file for the report.
OUTPUT_FILE="pokemon_report.csv"

# Check if the data directory exists and is not empty.
if [ ! -d "$DATA_DIR" ] || [ -z "$(ls -A "$DATA_DIR")" ]; then
  echo "Error: The '$DATA_DIR' directory does not exist or is empty. Please run the batch processing script first." >&2
  exit 1
fi

echo "Generating CSV Report at: $OUTPUT_FILE"

# Use a temporary file to store the formatted data before processing with awk.
TEMP_FILE=$(mktemp)

# Create the CSV data using jq and store it in the temporary file.
# We also sort the output by Pokémon name to match the sample.
jq -r '[
    .name,
    (.height / 10),
    (.weight / 10)
  ] | @csv' "$DATA_DIR"/*.json | sort -t ',' -k1 > "$TEMP_FILE"

# The main awk script to process the data.
# It reads the temporary CSV data, calculates averages, and prints the report.
awk '
BEGIN {
  # Set the field separator to a comma for CSV processing.
  FS=","
  # Print the CSV header.
  print "Name,Height (m),Weight (kg)"
  total_height = 0
  total_weight = 0
  count = 0
}
{
  # Print the CSV data row.
  print
  # Accumulate the total height and weight, and increment the count.
  total_height += $2
  total_weight += $3
  count++
}
END {
  # Calculate the averages.
  avg_height = total_height / count
  avg_weight = total_weight / count
  
  # Print the final averages in the required format.
  printf "\nAverage Height: %.2f m\n", avg_height
  printf "Average Weight: %.2f kg\n", avg_weight
}
' "$TEMP_FILE" > >(tee "$OUTPUT_FILE")

# Remove the temporary file.
rm "$TEMP_FILE"
