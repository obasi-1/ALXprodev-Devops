#!/usr/bin/env bash

# This script summarizes key data for multiple Pokémon from individual JSON files
# and exports the summary to a single CSV file.

# Define the directory containing the Pokémon JSON files.
DATA_DIR="pokemon_data"
# Define the output CSV file.
OUTPUT_FILE="pokemon_summary.csv"

# Check if the data directory exists and is not empty.
if [ ! -d "$DATA_DIR" ] || [ -z "$(ls -A "$DATA_DIR")" ]; then
  echo "Error: The '$DATA_DIR' directory does not exist or is empty. Please run the batch processing script first." >&2
  exit 1
fi

echo "Generating summary of Pokémon data and saving to '$OUTPUT_FILE'..."

# Use a single redirection to create the CSV file.
# The header and all subsequent data lines will be piped into this redirection.
{
  # Output the CSV header.
  echo "Name,Type,Weight (kg),Height (m)"

  # Loop through all files ending with .json in the specified directory.
  for file in "$DATA_DIR"/*.json; do
    # Check if a file was found (handle case where no .json files exist)
    if [ -e "$file" ]; then
      # Use jq to extract the required data and format it as a single CSV line.
      # The .name and .types[0].type.name are quoted to handle potential commas.
      # The .weight and .height values are converted from hectograms/decimeters
      # to kilograms/meters.
      jq -r --arg filename "$(basename "$file" .json)" '
        [
          (.name | sub("^[a-z]"; . | ascii_upcase)),
          (.types[0].type.name | sub("^[a-z]"; . | ascii_upcase)),
          (.weight / 10),
          (.height / 10)
        ] | @csv
      ' "$file"
    fi
  done
} > "$OUTPUT_FILE"

echo "Summary complete. Data saved to '$OUTPUT_FILE'."
